{"version":3,"sources":["hooks/useForm.js","utils/validateLogin.js","components/Login.js","App.js","globalStyles.js","index.js"],"names":["useForm","initialState","validate","useState","formValues","setFormValues","errors","setErrors","handleChange","event","target","name","value","handleSubmit","preventDefault","validateLogin","values","id","password","length","Container","styled","div","Avatar","AvatarHead","img","props","rotation","FormContainer","section","Form","form","Input","input","InputError","p","Login","avatarDefault","avatarClosingEyes","avatarSrc","setAvatarSrc","avatarRotation","setAvatarRotation","passwordRef","useRef","handleEnterKey","key","document","activeElement","current","focus","blur","handleGetFocus","setTimeout","cont","closeEyes","setInterval","clearInterval","handleLoseFocus","src","onSubmit","type","placeholder","onChange","onFocus","onBlur","onKeyDown","ref","App","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1a87bea4.chunk.js","sourcesContent":["import { useState } from 'react'\n\nconst useForm = (initialState = {}, validate, submit) =>Â {\n    const [formValues, setFormValues] = useState(initialState)\n    const [errors, setErrors] = useState({})\n\n    const handleChange = (event) => {\n        const {name, value} = event.target\n        setFormValues({\n            ...formValues, \n            [name]: value\n        })\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        setErrors(validate(formValues))\n    }\n\n    return {formValues, handleChange, handleSubmit, errors}\n}\n\nexport default useForm","export default function validateLogin(values) {\n    let errors = {}\n\n    if(!values.id) {\n        errors.id = \"Please enter your id.\"\n    }\n\n    if(!values.password.length) {\n        errors.password = \"Please enter your password.\"\n    }\n\n    return errors\n}","import React, { useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport useForm from '../hooks/useForm'\nimport validateLogin from '../utils/validateLogin'\n\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    padding: 1em;\n`\n\nconst Avatar = styled.div`\n    width: 10%;\n    position: relative;\n\n    &:after {\n        position: absolute;\n        content: '';\n        background: #2b2b2b;\n        width: 90%;\n        height: 100%;\n        top: 60%;\n        left: 50%;\n        transform: translate(-50%);\n        border-radius: 50%;\n        z-index: -1;\n    }\n`\n\nconst AvatarHead = styled.img`\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n    margin-bottom: 2.2em;\n    transition: all .2s ease;\n    transform: rotate(${props => props.rotation}deg)\n`\n\nconst FormContainer = styled.section`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;  \n    max-width: 540px;\n    background-color: #fff;\n    border-radius: .5em;\n    border: 3px solid #000;\n    box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, .2);\n    padding: 1.25em 5% 2.5em;\n`\n\nconst Form = styled.form`\n    width: 100%;\n    margin-top: -1.25em;\n`\n\nconst Input = styled.input`\n    display: block;\n    width: 100%;\n    margin: 2.5em auto 1em;\n    border-radius: .25em;\n    padding: .5em;\n    outline: none;\n    border: none;\n    font-size: 1rem;\n    background-color: #f7f7f7;\n\n    &:focus {\n        border: 2px solid #faed75;\n        background: #fff;\n    }\n`\n\nconst InputError = styled.p`\n    color: #9e1a1a;\n`\n\nexport default function Login() {\n    const avatarDefault = 'img/penguin/penguin-default.png'\n    const avatarLookingDown = 'img/penguin/penguin-looking-down.png'\n    const avatarClosingEyes = [\n        'img/penguin/penguin-eyes-closed-1.png',\n        'img/penguin/penguin-eyes-closed-2.png',\n    ]\n\n    const [avatarSrc, setAvatarSrc] = useState(avatarDefault)\n    const [avatarRotation, setAvatarRotation] = useState(0)\n\n    const passwordRef = useRef(null)\n\n    const { formValues, handleChange, handleSubmit, errors } = useForm ({\n        id: \"\",\n        password: \"\"\n    }, validateLogin)\n\n    const { id, password } = formValues\n\n    const closeAvatarEyes = () => {\n        setTimeout(() => {\n            let cont = 0;\n            const closeEyes = setInterval(() => {\n                setAvatarSrc(avatarClosingEyes[cont])\n\n                if(cont < avatarClosingEyes.length - 1) {\n                    cont++\n                } else {\n                    clearInterval(closeEyes)\n                }\n            }, 50)\n        }, 300) \n    }\n\n    const handleEnterKey = (event) => {\n        if (event.key === \"Enter\") {\n            if(document.activeElement !== passwordRef.current) {\n                passwordRef.current.focus()\n            } else {\n                handleSubmit(event)\n                passwordRef.current.blur()\n            }\n\n            return true\n        }\n        return false\n    }\n\n    const handleAvatarReading = (event) => {\n        if(!handleEnterKey(event)) {\n            const length = event.target.value.length\n            if(length >= 0 && length <= 5) {\n                setAvatarRotation(12)\n            } else if(length >= 6 && length <= 16) {\n                setAvatarRotation(6)\n            } else if(length >= 17 && length <= 27) {\n                setAvatarRotation(0)\n            } else if(length >= 28 && length <= 38) {\n                    setAvatarRotation(-6)\n            } else {\n                setAvatarRotation(-12)\n            }\n        }\n    }\n\n    const handleGetFocus = (event) => { \n        setAvatarRotation(0)\n\n        const name = event.target.name\n        if(name === 'id') {\n            setAvatarSrc(avatarLookingDown)\n        } else if(name === 'password') {\n            closeAvatarEyes()\n        }\n    }\n\n    const handleLoseFocus = () => {\n        setAvatarSrc(avatarDefault)\n    }\n\n    return (\n        <Container>\n            <Avatar>\n                <AvatarHead src={avatarSrc} rotation={avatarRotation} />\n            </Avatar>\n            \n            <FormContainer>\n                <Form onSubmit={handleSubmit}>\n                    <Input \n                        type=\"text\" \n                        name=\"id\" \n                        placeholder=\"ID\"\n                        aria-label=\"ID\"\n                        value={id}\n                        onChange={handleChange}\n                        onFocus={handleGetFocus}\n                        onBlur={handleLoseFocus}\n                        onKeyDown={handleAvatarReading}\n                    />\n\n                    {errors.id && <InputError>{errors.id}</InputError>}\n\n                    <Input \n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Password\" \n                        aria-label=\"Password\"\n                        value={password}\n                        onChange={handleChange}\n                        onFocus={handleGetFocus}\n                        onBlur={handleLoseFocus}\n                        onKeyDown={handleEnterKey}\n                        ref={passwordRef}\n                    />\n\n                    {errors.password && <InputError>{errors.password}</InputError>}\n                </Form>\n            </FormContainer>\n        </Container>\n    )\n}","import Login from \"./components/Login\";\n\nexport default function App() {\n  return (\n    <Login />\n  );\n}\n","import { createGlobalStyle } from \"styled-components\"\n\nconst GlobalStyle = createGlobalStyle`\n    *, *::before, *::after {\n        box-sizing: border-box;\n    }\n    body {\n        margin: 0;\n        padding: 0;\n        font-family: 'Urbanist', sans-serif;\n    }\n`\nexport default GlobalStyle","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport GlobalStyle from './globalStyles';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}